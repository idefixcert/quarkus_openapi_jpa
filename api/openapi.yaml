---
openapi: 3.1.0
paths:
  /api/customers:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Customer"
      summary: List
      tags:
      - Customer Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "200":
          description: OK
      summary: Create
      tags:
      - Customer Resource
  /api/customers/{customer_id}/invoices:
    get:
      parameters:
      - name: customer_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Invoice"
      summary: Invoices
      tags:
      - Customer Resource
    post:
      parameters:
      - name: customer_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InvoiceUpdate"
        required: true
      responses:
        "200":
          description: OK
      summary: Invoice Create
      tags:
      - Customer Resource
  /dogs:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dog"
      summary: List
      tags:
      - Dog Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dog"
        required: true
      responses:
        "200":
          description: OK
      summary: Create
      tags:
      - Dog Resource
  /dogs/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dog"
      summary: Get
      tags:
      - Dog Resource
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
      summary: Delete
      tags:
      - Dog Resource
  /hello:
    post:
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          application/json:
            schema:
              $ref: "#/components/schemas/Who"
        required: true
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
      summary: Hello Data
      tags:
      - Hello Resource
    get:
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
      summary: Hello
      tags:
      - Hello Resource
  /hello/{name}:
    get:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
      summary: Hello
      tags:
      - Hello Resource
  /persons:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
      summary: List
      tags:
      - Person Resource
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: OK
      summary: Create
      tags:
      - Person Resource
  /persons/count:
    get:
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int64
      summary: Count
      tags:
      - Person Resource
  /persons/search:
    get:
      parameters:
      - name: name
        in: query
        schema:
          type: string
          default: Stef
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Person"
      summary: Search All
      tags:
      - Person Resource
  /persons/search/{name}:
    get:
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      summary: Search
      tags:
      - Person Resource
  /persons/{id}:
    put:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Person"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      summary: Update
      tags:
      - Person Resource
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Person"
      summary: Get
      tags:
      - Person Resource
    delete:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "204":
          description: No Content
      summary: Delete
      tags:
      - Person Resource
  /persons/{person_id}/dogs:
    get:
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dog"
      summary: Get Dogs
      tags:
      - Person Resource
    post:
      parameters:
      - name: person_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dog"
        required: true
      responses:
        "200":
          description: OK
      summary: Create
      tags:
      - Person Resource
  /persons/{person_id}/dogs/{id}:
    get:
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: person_id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dog"
      summary: Get Dog
      tags:
      - Person Resource
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        email:
          type: string
        locale:
          type: string
    Dog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        race:
          type: string
        weight:
          type: number
          format: double
        owner_id:
          type: integer
          format: int64
    Invoice:
      type: object
      properties:
        id:
          type: integer
          format: int64
        identifier:
          type: string
        text:
          type: string
        locale:
          type: string
        date:
          $ref: "#/components/schemas/LocalDate"
        amount:
          type: number
          format: float
        taxes:
          type: array
          items:
            $ref: "#/components/schemas/Tax"
        customer:
          $ref: "#/components/schemas/Customer"
        positions:
          type: array
          items:
            $ref: "#/components/schemas/Position"
    InvoiceUpdate:
      type: object
      properties:
        identifier:
          type: string
        text:
          type: string
        locale:
          type: string
        date:
          $ref: "#/components/schemas/LocalDate"
    LocalDate:
      type: string
      format: date
      examples:
      - 2022-03-10
    Person:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        birth:
          $ref: "#/components/schemas/LocalDate"
        status:
          $ref: "#/components/schemas/Status"
        dogs:
          type: array
          items:
            $ref: "#/components/schemas/Dog"
    Position:
      type: object
      properties:
        id:
          type: integer
          format: int64
        invoice:
          $ref: "#/components/schemas/Invoice"
        text:
          type: string
        count:
          type: string
        unit:
          type: string
        price_per_unit:
          type: number
          format: float
        amount:
          type: number
          format: float
        tax:
          $ref: "#/components/schemas/Tax"
    Status:
      type: string
      enum:
      - Alive
      - Deceased
    Tax:
      type: object
      properties:
        tax_rate:
          type: number
          format: float
        tax_total:
          type: number
          format: float
        tax_amount:
          type: number
          format: float
    Who:
      type: object
      properties:
        vor_name:
          type: string
        nach_name:
          type: string
info:
  title: code-with-quarkus API
  version: 1.0.0-SNAPSHOT
servers:
- url: http://localhost:8080
  description: Auto generated value
- url: http://0.0.0.0:8080
  description: Auto generated value
